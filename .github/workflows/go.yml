# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: ðŸ§ª Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum

    - name: Test
      run: |
        sudo go test ./... -coverprofile coverage.out -covermode count
        sudo go tool cover -func coverage.out
    
    - name: Quality Gate
      run: |
            echo "Quality Gate: checking test coverage is above threshold ..."
            echo "Threshold             : ${{vars.TESTCOVERAGE_THRESHOLD}} %"
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage ${{vars.TESTCOVERAGE_THRESHOLD}}" | awk '{print ($1 > $2)}') )); then
                echo "OK"
            else
                echo "Current test coverage is below threshold. Please add more unit tests."
                echo "Failed"
                exit 1
            fi
  lint:
    name: ðŸ”Ž Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          args: --timeout=5m
          
