# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: ðŸ§ª Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: |
        sudo go test ./... -coverprofile coverage.out -covermode count
        sudo go tool cover -func coverage.out
    
    - name: Quality Gate
      run: |
            echo "Quality Gate: checking test coverage is above threshold ..."
            echo "Threshold             : ${{vars.TESTCOVERAGE_THRESHOLD}} %"
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage ${{vars.TESTCOVERAGE_THRESHOLD}}" | awk '{print ($1 > $2)}') )); then
                echo "OK"
            else
                echo "Current test coverage is below threshold. Please add more unit tests."
                echo "Failed"
                exit 1
            fi
  lint:
    name: Linter
    uses: golangci/golangci-lint-action@v3.7.0
    with:
      version: # optional
      # golangci-lint command line arguments
      args: # optional, default is 
      # golangci-lint working directory, default is project root
      working-directory: # optional
      # the token is used for fetching patch of a pull request to show only new issues
      github-token: # optional, default is ${{ github.token }}
      # if set to true and the action runs on a pull request - the action outputs only newly found issues
      only-new-issues: # optional, default is false
      # if set to true then the all caching functionality will be complete disabled,
  # takes precedence over all other caching options.
      skip-cache: # optional, default is false
      # if set to true then the action doesn't cache or restore ~/go/pkg.
      skip-pkg-cache: # optional, default is false
      # if set to true then the action doesn't cache or restore ~/.cache/go-build.
      skip-build-cache: # optional, default is false
      # The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
      install-mode: # optional, default is binary
          
